import { useState, useEffect } from 'react';

export default function App() {
  const [isMobile, setIsMobile] = useState(false);

  // Check screen size for responsive design
  useEffect(() => {
    const handleResize = () => {
      setIsMobile(window.innerWidth < 768);
    };
    handleResize();
    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  // Data from the provided table
  const summaryData = {
    totalPrompts: 5,
    totalTokens: 164,
    totalCategories: 5,
    categories: [
      { name: 'عام', prompts: 0, tokens: 0, avgTokens: 0 },
      { name: 'تعليمي', prompts: 2, tokens: 60, avgTokens: 30 },
      { name: 'إبداعي', prompts: 1, tokens: 45, avgTokens: 45 },
      { name: 'تحليل بيانات', prompts: 1, tokens: 18, avgTokens: 18 },
      { name: 'برمجة', prompts: 1, tokens: 41, avgTokens: 41 },
    ],
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 to-gray-800 text-white font-sans">
      {/* Header */}
      <header className="bg-gray-800 shadow-lg sticky top-0 z-10">
        <div className="container mx-auto px-4 py-4 flex justify-between items-center">
          <h1 className="text-2xl md:text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-teal-400">
            لوحة التحكم - إدارة البرومبتات
          </h1>
          {!isMobile && (
            <nav className="space-x-4 space-x-reverse">
              <a href="#" className="hover:text-blue-400 transition">الرئيسية</a>
              <a href="#" className="hover:text-blue-400 transition">التصنيفات</a>
              <a href="#" className="hover:text-blue-400 transition">التقارير</a>
            </nav>
          )}
        </div>
      </header>

      {/* Main Content */}
      <main className="container mx-auto px-4 py-8">
        {/* Summary Cards */}
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          {[
            { title: 'إجمالي البرومبتات', value: summaryData.totalPrompts, icon: '📝' },
            { title: 'إجمالي التوكيانات', value: summaryData.totalTokens, icon: '🧮' },
            { title: 'عدد الأقسام', value: summaryData.totalCategories, icon: '📁' },
            { title: 'متوسط التوكيانات', value: Math.round(summaryData.totalTokens / summaryData.totalPrompts || 0), icon: '📊' },
          ].map((card, index) => (
            <div
              key={index}
              className="bg-gray-800 p-6 rounded-xl shadow-lg hover:shadow-xl transition transform hover:-translate-y-1"
            >
              <div className="flex items-center">
                <span className="text-3xl mr-4">{card.icon}</span>
                <div>
                  <p className="text-gray-400 text-sm">{card.title}</p>
                  <p className="text-2xl font-bold mt-1">{card.value}</p>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* Table */}
        <div className="bg-gray-800 rounded-xl shadow-lg overflow-hidden">
          <div className="p-6 border-b border-gray-700">
            <h2 className="text-xl font-semibold">توزيع البرومبتات حسب القسم</h2>
          </div>
          <div className="overflow-x-auto">
            <table className="w-full text-right">
              <thead className="bg-gray-700 text-gray-300 text-sm">
                <tr>
                  <th className="px-6 py-3 text-right">القسم</th>
                  <th className="px-6 py-3 text-center">عدد البرومبتات</th>
                  <th className="px-6 py-3 text-center">إجمالي التوكيانات</th>
                  <th className="px-6 py-3 text-center">متوسط التوكيانات</th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-700">
                {summaryData.categories.map((row, index) => (
                  <tr
                    key={index}
                    className={`hover:bg-gray-700 transition ${index % 2 === 0 ? 'bg-gray-800' : 'bg-gray-750'}`}
                  >
                    <td className="px-6 py-4 whitespace-nowrap">{row.name}</td>
                    <td className="px-6 py-4 text-center">{row.prompts}</td>
                    <td className="px-6 py-4 text-center">{row.tokens}</td>
                    <td className="px-6 py-4 text-center">{row.avgTokens}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </main>

      {/* Footer */}
      <footer className="bg-gray-800 mt-12 py-6">
        <div className="container mx-auto px-4 text-center text-gray-400 text-sm">
          <p>© {new Date().getFullYear()} موقع إدارة البرومبتات. جميع الحقوق محفوظة.</p>
        </div>
      </footer>
    </div>
  );
}
